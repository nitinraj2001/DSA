import java.util.*;
// Binary search by iterative approach
public class Coding {

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter size of an array");
        int n=sc.nextInt();
        // create an array of size n
        int[] arr = new int[n];
        System.out.println("Enter elements of an array");
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        // display the input array
        printArray(arr,n);

        System.out.println("Enter elements to be search");
        int key = sc.nextInt();
        int res = binarySearch(arr,n,key);
        if(res == -1){
            System.out.println("Element " + key +" not found in an array");
        }else{
            System.out.println("Element " + key + " found at " + res + " index in an array");

        }
    }

    public static void printArray(int[] arr, int n){
        System.out.println("Elements of an array are:: ");
        for(int i=0;i<n;i++){
            System.out.print(arr[i] + " ");
        }
    }

    public static int binarySearch(int[] arr, int n, int key){
        int res = -1;
        int low=0, high = n-1;
        while(low<=high){
            int mid = (low+high)/2;
            if(arr[mid] == key)return mid;
            else if(arr[mid]>key)high=mid-1;
            else low=mid+1;
        }
        return res;
    }
}
