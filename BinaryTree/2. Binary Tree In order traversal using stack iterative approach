 public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if(root == null ) return result;
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        TreeNode current = root.left;
        while(!stack.isEmpty() || current!=null){
            if(current != null){
                stack.push(current);
                current = current.left;
            }
            else{
                current = stack.pop();
                result.add(current.val);
                current = current.right;
            }
        }
      return result;
    }

Time Complexity --> O(n) where n is number of nodes in the binary tree
